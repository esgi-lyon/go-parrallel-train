/*
Lobstr

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package lobstrio

import (
	"encoding/json"
)

// checks if the RunClusterRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RunClusterRequest{}

// RunClusterRequest struct for RunClusterRequest
type RunClusterRequest struct {
	Cluster string `json:"cluster"`
}

// NewRunClusterRequest instantiates a new RunClusterRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRunClusterRequest(cluster string) *RunClusterRequest {
	this := RunClusterRequest{}
	this.Cluster = cluster
	return &this
}

// NewRunClusterRequestWithDefaults instantiates a new RunClusterRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRunClusterRequestWithDefaults() *RunClusterRequest {
	this := RunClusterRequest{}
	return &this
}

// GetCluster returns the Cluster field value
func (o *RunClusterRequest) GetCluster() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Cluster
}

// GetClusterOk returns a tuple with the Cluster field value
// and a boolean to check if the value has been set.
func (o *RunClusterRequest) GetClusterOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Cluster, true
}

// SetCluster sets field value
func (o *RunClusterRequest) SetCluster(v string) {
	o.Cluster = v
}

func (o RunClusterRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RunClusterRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["cluster"] = o.Cluster
	return toSerialize, nil
}

type NullableRunClusterRequest struct {
	value *RunClusterRequest
	isSet bool
}

func (v NullableRunClusterRequest) Get() *RunClusterRequest {
	return v.value
}

func (v *NullableRunClusterRequest) Set(val *RunClusterRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableRunClusterRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRunClusterRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRunClusterRequest(val *RunClusterRequest) *NullableRunClusterRequest {
	return &NullableRunClusterRequest{value: val, isSet: true}
}

func (v NullableRunClusterRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRunClusterRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


