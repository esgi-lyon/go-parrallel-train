/*
lobstr API v1

Lobstr API is an easy-to-implement API to launch already-made data crawlers, handle accounts and schedules, and collect results.  ## Authentication  All requests must include the `Authorization` headers. You can obtain these from the settings menu.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ListResultsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListResultsRequest{}

// ListResultsRequest struct for ListResultsRequest
type ListResultsRequest struct {
	Cluster string `json:"cluster"`
	Run *string `json:"run,omitempty"`
	Task *string `json:"task,omitempty"`
}

// NewListResultsRequest instantiates a new ListResultsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListResultsRequest(cluster string) *ListResultsRequest {
	this := ListResultsRequest{}
	this.Cluster = cluster
	return &this
}

// NewListResultsRequestWithDefaults instantiates a new ListResultsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListResultsRequestWithDefaults() *ListResultsRequest {
	this := ListResultsRequest{}
	return &this
}

// GetCluster returns the Cluster field value
func (o *ListResultsRequest) GetCluster() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Cluster
}

// GetClusterOk returns a tuple with the Cluster field value
// and a boolean to check if the value has been set.
func (o *ListResultsRequest) GetClusterOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Cluster, true
}

// SetCluster sets field value
func (o *ListResultsRequest) SetCluster(v string) {
	o.Cluster = v
}

// GetRun returns the Run field value if set, zero value otherwise.
func (o *ListResultsRequest) GetRun() string {
	if o == nil || IsNil(o.Run) {
		var ret string
		return ret
	}
	return *o.Run
}

// GetRunOk returns a tuple with the Run field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListResultsRequest) GetRunOk() (*string, bool) {
	if o == nil || IsNil(o.Run) {
		return nil, false
	}
	return o.Run, true
}

// HasRun returns a boolean if a field has been set.
func (o *ListResultsRequest) HasRun() bool {
	if o != nil && !IsNil(o.Run) {
		return true
	}

	return false
}

// SetRun gets a reference to the given string and assigns it to the Run field.
func (o *ListResultsRequest) SetRun(v string) {
	o.Run = &v
}

// GetTask returns the Task field value if set, zero value otherwise.
func (o *ListResultsRequest) GetTask() string {
	if o == nil || IsNil(o.Task) {
		var ret string
		return ret
	}
	return *o.Task
}

// GetTaskOk returns a tuple with the Task field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListResultsRequest) GetTaskOk() (*string, bool) {
	if o == nil || IsNil(o.Task) {
		return nil, false
	}
	return o.Task, true
}

// HasTask returns a boolean if a field has been set.
func (o *ListResultsRequest) HasTask() bool {
	if o != nil && !IsNil(o.Task) {
		return true
	}

	return false
}

// SetTask gets a reference to the given string and assigns it to the Task field.
func (o *ListResultsRequest) SetTask(v string) {
	o.Task = &v
}

func (o ListResultsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListResultsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["cluster"] = o.Cluster
	if !IsNil(o.Run) {
		toSerialize["run"] = o.Run
	}
	if !IsNil(o.Task) {
		toSerialize["task"] = o.Task
	}
	return toSerialize, nil
}

type NullableListResultsRequest struct {
	value *ListResultsRequest
	isSet bool
}

func (v NullableListResultsRequest) Get() *ListResultsRequest {
	return v.value
}

func (v *NullableListResultsRequest) Set(val *ListResultsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableListResultsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableListResultsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListResultsRequest(val *ListResultsRequest) *NullableListResultsRequest {
	return &NullableListResultsRequest{value: val, isSet: true}
}

func (v NullableListResultsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListResultsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


