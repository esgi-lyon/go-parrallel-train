/*
lobstr API v1

Lobstr API is an easy-to-implement API to launch already-made data crawlers, handle accounts and schedules, and collect results.  ## Authentication  All requests must include the `Authorization` headers. You can obtain these from the settings menu.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RunStats type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RunStats{}

// RunStats struct for RunStats
type RunStats struct {
	// unique id
	Id string `json:"id"`
	Object *string `json:"object,omitempty"`
	Duration *string `json:"duration,omitempty"`
	EndedAt *string `json:"ended_at,omitempty"`
	Eta string `json:"eta"`
	IsDone bool `json:"is_done"`
	PercentDone string `json:"percent_done"`
	StartedAt string `json:"started_at"`
	TotalRequests float32 `json:"total_requests"`
	TotalResults float32 `json:"total_results"`
	TotalTasks float32 `json:"total_tasks"`
	TotalTasksDone float32 `json:"total_tasks_done"`
	TotalTasksLeft float32 `json:"total_tasks_left"`
	UpdatedAt string `json:"updated_at"`
}

// NewRunStats instantiates a new RunStats object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRunStats(id string, eta string, isDone bool, percentDone string, startedAt string, totalRequests float32, totalResults float32, totalTasks float32, totalTasksDone float32, totalTasksLeft float32, updatedAt string) *RunStats {
	this := RunStats{}
	this.Id = id
	this.Eta = eta
	this.IsDone = isDone
	this.PercentDone = percentDone
	this.StartedAt = startedAt
	this.TotalRequests = totalRequests
	this.TotalResults = totalResults
	this.TotalTasks = totalTasks
	this.TotalTasksDone = totalTasksDone
	this.TotalTasksLeft = totalTasksLeft
	this.UpdatedAt = updatedAt
	return &this
}

// NewRunStatsWithDefaults instantiates a new RunStats object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRunStatsWithDefaults() *RunStats {
	this := RunStats{}
	return &this
}

// GetId returns the Id field value
func (o *RunStats) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *RunStats) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *RunStats) SetId(v string) {
	o.Id = v
}

// GetObject returns the Object field value if set, zero value otherwise.
func (o *RunStats) GetObject() string {
	if o == nil || IsNil(o.Object) {
		var ret string
		return ret
	}
	return *o.Object
}

// GetObjectOk returns a tuple with the Object field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RunStats) GetObjectOk() (*string, bool) {
	if o == nil || IsNil(o.Object) {
		return nil, false
	}
	return o.Object, true
}

// HasObject returns a boolean if a field has been set.
func (o *RunStats) HasObject() bool {
	if o != nil && !IsNil(o.Object) {
		return true
	}

	return false
}

// SetObject gets a reference to the given string and assigns it to the Object field.
func (o *RunStats) SetObject(v string) {
	o.Object = &v
}

// GetDuration returns the Duration field value if set, zero value otherwise.
func (o *RunStats) GetDuration() string {
	if o == nil || IsNil(o.Duration) {
		var ret string
		return ret
	}
	return *o.Duration
}

// GetDurationOk returns a tuple with the Duration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RunStats) GetDurationOk() (*string, bool) {
	if o == nil || IsNil(o.Duration) {
		return nil, false
	}
	return o.Duration, true
}

// HasDuration returns a boolean if a field has been set.
func (o *RunStats) HasDuration() bool {
	if o != nil && !IsNil(o.Duration) {
		return true
	}

	return false
}

// SetDuration gets a reference to the given string and assigns it to the Duration field.
func (o *RunStats) SetDuration(v string) {
	o.Duration = &v
}

// GetEndedAt returns the EndedAt field value if set, zero value otherwise.
func (o *RunStats) GetEndedAt() string {
	if o == nil || IsNil(o.EndedAt) {
		var ret string
		return ret
	}
	return *o.EndedAt
}

// GetEndedAtOk returns a tuple with the EndedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RunStats) GetEndedAtOk() (*string, bool) {
	if o == nil || IsNil(o.EndedAt) {
		return nil, false
	}
	return o.EndedAt, true
}

// HasEndedAt returns a boolean if a field has been set.
func (o *RunStats) HasEndedAt() bool {
	if o != nil && !IsNil(o.EndedAt) {
		return true
	}

	return false
}

// SetEndedAt gets a reference to the given string and assigns it to the EndedAt field.
func (o *RunStats) SetEndedAt(v string) {
	o.EndedAt = &v
}

// GetEta returns the Eta field value
func (o *RunStats) GetEta() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Eta
}

// GetEtaOk returns a tuple with the Eta field value
// and a boolean to check if the value has been set.
func (o *RunStats) GetEtaOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Eta, true
}

// SetEta sets field value
func (o *RunStats) SetEta(v string) {
	o.Eta = v
}

// GetIsDone returns the IsDone field value
func (o *RunStats) GetIsDone() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsDone
}

// GetIsDoneOk returns a tuple with the IsDone field value
// and a boolean to check if the value has been set.
func (o *RunStats) GetIsDoneOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsDone, true
}

// SetIsDone sets field value
func (o *RunStats) SetIsDone(v bool) {
	o.IsDone = v
}

// GetPercentDone returns the PercentDone field value
func (o *RunStats) GetPercentDone() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PercentDone
}

// GetPercentDoneOk returns a tuple with the PercentDone field value
// and a boolean to check if the value has been set.
func (o *RunStats) GetPercentDoneOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PercentDone, true
}

// SetPercentDone sets field value
func (o *RunStats) SetPercentDone(v string) {
	o.PercentDone = v
}

// GetStartedAt returns the StartedAt field value
func (o *RunStats) GetStartedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StartedAt
}

// GetStartedAtOk returns a tuple with the StartedAt field value
// and a boolean to check if the value has been set.
func (o *RunStats) GetStartedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StartedAt, true
}

// SetStartedAt sets field value
func (o *RunStats) SetStartedAt(v string) {
	o.StartedAt = v
}

// GetTotalRequests returns the TotalRequests field value
func (o *RunStats) GetTotalRequests() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.TotalRequests
}

// GetTotalRequestsOk returns a tuple with the TotalRequests field value
// and a boolean to check if the value has been set.
func (o *RunStats) GetTotalRequestsOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalRequests, true
}

// SetTotalRequests sets field value
func (o *RunStats) SetTotalRequests(v float32) {
	o.TotalRequests = v
}

// GetTotalResults returns the TotalResults field value
func (o *RunStats) GetTotalResults() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.TotalResults
}

// GetTotalResultsOk returns a tuple with the TotalResults field value
// and a boolean to check if the value has been set.
func (o *RunStats) GetTotalResultsOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalResults, true
}

// SetTotalResults sets field value
func (o *RunStats) SetTotalResults(v float32) {
	o.TotalResults = v
}

// GetTotalTasks returns the TotalTasks field value
func (o *RunStats) GetTotalTasks() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.TotalTasks
}

// GetTotalTasksOk returns a tuple with the TotalTasks field value
// and a boolean to check if the value has been set.
func (o *RunStats) GetTotalTasksOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalTasks, true
}

// SetTotalTasks sets field value
func (o *RunStats) SetTotalTasks(v float32) {
	o.TotalTasks = v
}

// GetTotalTasksDone returns the TotalTasksDone field value
func (o *RunStats) GetTotalTasksDone() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.TotalTasksDone
}

// GetTotalTasksDoneOk returns a tuple with the TotalTasksDone field value
// and a boolean to check if the value has been set.
func (o *RunStats) GetTotalTasksDoneOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalTasksDone, true
}

// SetTotalTasksDone sets field value
func (o *RunStats) SetTotalTasksDone(v float32) {
	o.TotalTasksDone = v
}

// GetTotalTasksLeft returns the TotalTasksLeft field value
func (o *RunStats) GetTotalTasksLeft() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.TotalTasksLeft
}

// GetTotalTasksLeftOk returns a tuple with the TotalTasksLeft field value
// and a boolean to check if the value has been set.
func (o *RunStats) GetTotalTasksLeftOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalTasksLeft, true
}

// SetTotalTasksLeft sets field value
func (o *RunStats) SetTotalTasksLeft(v float32) {
	o.TotalTasksLeft = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *RunStats) GetUpdatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *RunStats) GetUpdatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *RunStats) SetUpdatedAt(v string) {
	o.UpdatedAt = v
}

func (o RunStats) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RunStats) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	if !IsNil(o.Object) {
		toSerialize["object"] = o.Object
	}
	if !IsNil(o.Duration) {
		toSerialize["duration"] = o.Duration
	}
	if !IsNil(o.EndedAt) {
		toSerialize["ended_at"] = o.EndedAt
	}
	toSerialize["eta"] = o.Eta
	toSerialize["is_done"] = o.IsDone
	toSerialize["percent_done"] = o.PercentDone
	toSerialize["started_at"] = o.StartedAt
	toSerialize["total_requests"] = o.TotalRequests
	toSerialize["total_results"] = o.TotalResults
	toSerialize["total_tasks"] = o.TotalTasks
	toSerialize["total_tasks_done"] = o.TotalTasksDone
	toSerialize["total_tasks_left"] = o.TotalTasksLeft
	toSerialize["updated_at"] = o.UpdatedAt
	return toSerialize, nil
}

type NullableRunStats struct {
	value *RunStats
	isSet bool
}

func (v NullableRunStats) Get() *RunStats {
	return v.value
}

func (v *NullableRunStats) Set(val *RunStats) {
	v.value = val
	v.isSet = true
}

func (v NullableRunStats) IsSet() bool {
	return v.isSet
}

func (v *NullableRunStats) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRunStats(val *RunStats) *NullableRunStats {
	return &NullableRunStats{value: val, isSet: true}
}

func (v NullableRunStats) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRunStats) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


