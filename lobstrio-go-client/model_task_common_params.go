/*
lobstr API v1

Lobstr API is an easy-to-implement API to launch already-made data crawlers, handle accounts and schedules, and collect results.  ## Authentication  All requests must include the `Authorization` headers. You can obtain these from the settings menu.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the TaskCommonParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TaskCommonParams{}

// TaskCommonParams struct for TaskCommonParams
type TaskCommonParams struct {
	MaxPages *float32 `json:"max_pages,omitempty"`
	ResultsPerPage *float32 `json:"results_per_page,omitempty"`
	Url *string `json:"url,omitempty"`
}

// NewTaskCommonParams instantiates a new TaskCommonParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTaskCommonParams() *TaskCommonParams {
	this := TaskCommonParams{}
	return &this
}

// NewTaskCommonParamsWithDefaults instantiates a new TaskCommonParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTaskCommonParamsWithDefaults() *TaskCommonParams {
	this := TaskCommonParams{}
	return &this
}

// GetMaxPages returns the MaxPages field value if set, zero value otherwise.
func (o *TaskCommonParams) GetMaxPages() float32 {
	if o == nil || IsNil(o.MaxPages) {
		var ret float32
		return ret
	}
	return *o.MaxPages
}

// GetMaxPagesOk returns a tuple with the MaxPages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskCommonParams) GetMaxPagesOk() (*float32, bool) {
	if o == nil || IsNil(o.MaxPages) {
		return nil, false
	}
	return o.MaxPages, true
}

// HasMaxPages returns a boolean if a field has been set.
func (o *TaskCommonParams) HasMaxPages() bool {
	if o != nil && !IsNil(o.MaxPages) {
		return true
	}

	return false
}

// SetMaxPages gets a reference to the given float32 and assigns it to the MaxPages field.
func (o *TaskCommonParams) SetMaxPages(v float32) {
	o.MaxPages = &v
}

// GetResultsPerPage returns the ResultsPerPage field value if set, zero value otherwise.
func (o *TaskCommonParams) GetResultsPerPage() float32 {
	if o == nil || IsNil(o.ResultsPerPage) {
		var ret float32
		return ret
	}
	return *o.ResultsPerPage
}

// GetResultsPerPageOk returns a tuple with the ResultsPerPage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskCommonParams) GetResultsPerPageOk() (*float32, bool) {
	if o == nil || IsNil(o.ResultsPerPage) {
		return nil, false
	}
	return o.ResultsPerPage, true
}

// HasResultsPerPage returns a boolean if a field has been set.
func (o *TaskCommonParams) HasResultsPerPage() bool {
	if o != nil && !IsNil(o.ResultsPerPage) {
		return true
	}

	return false
}

// SetResultsPerPage gets a reference to the given float32 and assigns it to the ResultsPerPage field.
func (o *TaskCommonParams) SetResultsPerPage(v float32) {
	o.ResultsPerPage = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *TaskCommonParams) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskCommonParams) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *TaskCommonParams) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *TaskCommonParams) SetUrl(v string) {
	o.Url = &v
}

func (o TaskCommonParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TaskCommonParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MaxPages) {
		toSerialize["max_pages"] = o.MaxPages
	}
	if !IsNil(o.ResultsPerPage) {
		toSerialize["results_per_page"] = o.ResultsPerPage
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	return toSerialize, nil
}

type NullableTaskCommonParams struct {
	value *TaskCommonParams
	isSet bool
}

func (v NullableTaskCommonParams) Get() *TaskCommonParams {
	return v.value
}

func (v *NullableTaskCommonParams) Set(val *TaskCommonParams) {
	v.value = val
	v.isSet = true
}

func (v NullableTaskCommonParams) IsSet() bool {
	return v.isSet
}

func (v *NullableTaskCommonParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTaskCommonParams(val *TaskCommonParams) *NullableTaskCommonParams {
	return &NullableTaskCommonParams{value: val, isSet: true}
}

func (v NullableTaskCommonParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTaskCommonParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


