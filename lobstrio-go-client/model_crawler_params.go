/*
lobstr API v1

Lobstr API is an easy-to-implement API to launch already-made data crawlers, handle accounts and schedules, and collect results.  ## Authentication  All requests must include the `Authorization` headers. You can obtain these from the settings menu.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CrawlerParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CrawlerParams{}

// CrawlerParams struct for CrawlerParams
type CrawlerParams struct {
	Cluster ClusterCrawlerParams `json:"cluster"`
	Task TaskCrawlerParams `json:"task"`
}

// NewCrawlerParams instantiates a new CrawlerParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCrawlerParams(cluster ClusterCrawlerParams, task TaskCrawlerParams) *CrawlerParams {
	this := CrawlerParams{}
	this.Cluster = cluster
	this.Task = task
	return &this
}

// NewCrawlerParamsWithDefaults instantiates a new CrawlerParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCrawlerParamsWithDefaults() *CrawlerParams {
	this := CrawlerParams{}
	return &this
}

// GetCluster returns the Cluster field value
func (o *CrawlerParams) GetCluster() ClusterCrawlerParams {
	if o == nil {
		var ret ClusterCrawlerParams
		return ret
	}

	return o.Cluster
}

// GetClusterOk returns a tuple with the Cluster field value
// and a boolean to check if the value has been set.
func (o *CrawlerParams) GetClusterOk() (*ClusterCrawlerParams, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Cluster, true
}

// SetCluster sets field value
func (o *CrawlerParams) SetCluster(v ClusterCrawlerParams) {
	o.Cluster = v
}

// GetTask returns the Task field value
func (o *CrawlerParams) GetTask() TaskCrawlerParams {
	if o == nil {
		var ret TaskCrawlerParams
		return ret
	}

	return o.Task
}

// GetTaskOk returns a tuple with the Task field value
// and a boolean to check if the value has been set.
func (o *CrawlerParams) GetTaskOk() (*TaskCrawlerParams, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Task, true
}

// SetTask sets field value
func (o *CrawlerParams) SetTask(v TaskCrawlerParams) {
	o.Task = v
}

func (o CrawlerParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CrawlerParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["cluster"] = o.Cluster
	toSerialize["task"] = o.Task
	return toSerialize, nil
}

type NullableCrawlerParams struct {
	value *CrawlerParams
	isSet bool
}

func (v NullableCrawlerParams) Get() *CrawlerParams {
	return v.value
}

func (v *NullableCrawlerParams) Set(val *CrawlerParams) {
	v.value = val
	v.isSet = true
}

func (v NullableCrawlerParams) IsSet() bool {
	return v.isSet
}

func (v *NullableCrawlerParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCrawlerParams(val *CrawlerParams) *NullableCrawlerParams {
	return &NullableCrawlerParams{value: val, isSet: true}
}

func (v NullableCrawlerParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCrawlerParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


