/*
lobstr API v1

Lobstr API is an easy-to-implement API to launch already-made data crawlers, handle accounts and schedules, and collect results.  ## Authentication  All requests must include the `Authorization` headers. You can obtain these from the settings menu.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the LaunchRunRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LaunchRunRequest{}

// LaunchRunRequest struct for LaunchRunRequest
type LaunchRunRequest struct {
	Cluster string `json:"cluster"`
}

// NewLaunchRunRequest instantiates a new LaunchRunRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLaunchRunRequest(cluster string) *LaunchRunRequest {
	this := LaunchRunRequest{}
	this.Cluster = cluster
	return &this
}

// NewLaunchRunRequestWithDefaults instantiates a new LaunchRunRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLaunchRunRequestWithDefaults() *LaunchRunRequest {
	this := LaunchRunRequest{}
	return &this
}

// GetCluster returns the Cluster field value
func (o *LaunchRunRequest) GetCluster() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Cluster
}

// GetClusterOk returns a tuple with the Cluster field value
// and a boolean to check if the value has been set.
func (o *LaunchRunRequest) GetClusterOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Cluster, true
}

// SetCluster sets field value
func (o *LaunchRunRequest) SetCluster(v string) {
	o.Cluster = v
}

func (o LaunchRunRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LaunchRunRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["cluster"] = o.Cluster
	return toSerialize, nil
}

type NullableLaunchRunRequest struct {
	value *LaunchRunRequest
	isSet bool
}

func (v NullableLaunchRunRequest) Get() *LaunchRunRequest {
	return v.value
}

func (v *NullableLaunchRunRequest) Set(val *LaunchRunRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableLaunchRunRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableLaunchRunRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLaunchRunRequest(val *LaunchRunRequest) *NullableLaunchRunRequest {
	return &NullableLaunchRunRequest{value: val, isSet: true}
}

func (v NullableLaunchRunRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLaunchRunRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


