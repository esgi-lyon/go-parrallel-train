/*
lobstr API v1

Lobstr API is an easy-to-implement API to launch already-made data crawlers, handle accounts and schedules, and collect results.  ## Authentication  All requests must include the `Authorization` headers. You can obtain these from the settings menu.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ClusterCommonAttribsUpdate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClusterCommonAttribsUpdate{}

// ClusterCommonAttribsUpdate struct for ClusterCommonAttribsUpdate
type ClusterCommonAttribsUpdate struct {
	Account string `json:"account"`
	Concurrency *float32 `json:"concurrency,omitempty"`
	Crawler string `json:"crawler"`
	IsActive bool `json:"is_active"`
	Name string `json:"name"`
	Params ClusterCommonParams `json:"params"`
	Schedule string `json:"schedule"`
}

// NewClusterCommonAttribsUpdate instantiates a new ClusterCommonAttribsUpdate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterCommonAttribsUpdate(account string, crawler string, isActive bool, name string, params ClusterCommonParams, schedule string) *ClusterCommonAttribsUpdate {
	this := ClusterCommonAttribsUpdate{}
	this.Account = account
	this.Crawler = crawler
	this.IsActive = isActive
	this.Name = name
	this.Params = params
	this.Schedule = schedule
	return &this
}

// NewClusterCommonAttribsUpdateWithDefaults instantiates a new ClusterCommonAttribsUpdate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterCommonAttribsUpdateWithDefaults() *ClusterCommonAttribsUpdate {
	this := ClusterCommonAttribsUpdate{}
	return &this
}

// GetAccount returns the Account field value
func (o *ClusterCommonAttribsUpdate) GetAccount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Account
}

// GetAccountOk returns a tuple with the Account field value
// and a boolean to check if the value has been set.
func (o *ClusterCommonAttribsUpdate) GetAccountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Account, true
}

// SetAccount sets field value
func (o *ClusterCommonAttribsUpdate) SetAccount(v string) {
	o.Account = v
}

// GetConcurrency returns the Concurrency field value if set, zero value otherwise.
func (o *ClusterCommonAttribsUpdate) GetConcurrency() float32 {
	if o == nil || IsNil(o.Concurrency) {
		var ret float32
		return ret
	}
	return *o.Concurrency
}

// GetConcurrencyOk returns a tuple with the Concurrency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterCommonAttribsUpdate) GetConcurrencyOk() (*float32, bool) {
	if o == nil || IsNil(o.Concurrency) {
		return nil, false
	}
	return o.Concurrency, true
}

// HasConcurrency returns a boolean if a field has been set.
func (o *ClusterCommonAttribsUpdate) HasConcurrency() bool {
	if o != nil && !IsNil(o.Concurrency) {
		return true
	}

	return false
}

// SetConcurrency gets a reference to the given float32 and assigns it to the Concurrency field.
func (o *ClusterCommonAttribsUpdate) SetConcurrency(v float32) {
	o.Concurrency = &v
}

// GetCrawler returns the Crawler field value
func (o *ClusterCommonAttribsUpdate) GetCrawler() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Crawler
}

// GetCrawlerOk returns a tuple with the Crawler field value
// and a boolean to check if the value has been set.
func (o *ClusterCommonAttribsUpdate) GetCrawlerOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Crawler, true
}

// SetCrawler sets field value
func (o *ClusterCommonAttribsUpdate) SetCrawler(v string) {
	o.Crawler = v
}

// GetIsActive returns the IsActive field value
func (o *ClusterCommonAttribsUpdate) GetIsActive() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsActive
}

// GetIsActiveOk returns a tuple with the IsActive field value
// and a boolean to check if the value has been set.
func (o *ClusterCommonAttribsUpdate) GetIsActiveOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsActive, true
}

// SetIsActive sets field value
func (o *ClusterCommonAttribsUpdate) SetIsActive(v bool) {
	o.IsActive = v
}

// GetName returns the Name field value
func (o *ClusterCommonAttribsUpdate) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ClusterCommonAttribsUpdate) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ClusterCommonAttribsUpdate) SetName(v string) {
	o.Name = v
}

// GetParams returns the Params field value
func (o *ClusterCommonAttribsUpdate) GetParams() ClusterCommonParams {
	if o == nil {
		var ret ClusterCommonParams
		return ret
	}

	return o.Params
}

// GetParamsOk returns a tuple with the Params field value
// and a boolean to check if the value has been set.
func (o *ClusterCommonAttribsUpdate) GetParamsOk() (*ClusterCommonParams, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Params, true
}

// SetParams sets field value
func (o *ClusterCommonAttribsUpdate) SetParams(v ClusterCommonParams) {
	o.Params = v
}

// GetSchedule returns the Schedule field value
func (o *ClusterCommonAttribsUpdate) GetSchedule() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Schedule
}

// GetScheduleOk returns a tuple with the Schedule field value
// and a boolean to check if the value has been set.
func (o *ClusterCommonAttribsUpdate) GetScheduleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Schedule, true
}

// SetSchedule sets field value
func (o *ClusterCommonAttribsUpdate) SetSchedule(v string) {
	o.Schedule = v
}

func (o ClusterCommonAttribsUpdate) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClusterCommonAttribsUpdate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["account"] = o.Account
	if !IsNil(o.Concurrency) {
		toSerialize["concurrency"] = o.Concurrency
	}
	toSerialize["crawler"] = o.Crawler
	toSerialize["is_active"] = o.IsActive
	toSerialize["name"] = o.Name
	toSerialize["params"] = o.Params
	toSerialize["schedule"] = o.Schedule
	return toSerialize, nil
}

type NullableClusterCommonAttribsUpdate struct {
	value *ClusterCommonAttribsUpdate
	isSet bool
}

func (v NullableClusterCommonAttribsUpdate) Get() *ClusterCommonAttribsUpdate {
	return v.value
}

func (v *NullableClusterCommonAttribsUpdate) Set(val *ClusterCommonAttribsUpdate) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterCommonAttribsUpdate) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterCommonAttribsUpdate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterCommonAttribsUpdate(val *ClusterCommonAttribsUpdate) *NullableClusterCommonAttribsUpdate {
	return &NullableClusterCommonAttribsUpdate{value: val, isSet: true}
}

func (v NullableClusterCommonAttribsUpdate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterCommonAttribsUpdate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


