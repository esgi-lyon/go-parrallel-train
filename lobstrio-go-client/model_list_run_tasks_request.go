/*
lobstr API v1

Lobstr API is an easy-to-implement API to launch already-made data crawlers, handle accounts and schedules, and collect results.  ## Authentication  All requests must include the `Authorization` headers. You can obtain these from the settings menu.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ListRunTasksRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListRunTasksRequest{}

// ListRunTasksRequest struct for ListRunTasksRequest
type ListRunTasksRequest struct {
	Run *string `json:"run,omitempty"`
	Task *string `json:"task,omitempty"`
}

// NewListRunTasksRequest instantiates a new ListRunTasksRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListRunTasksRequest() *ListRunTasksRequest {
	this := ListRunTasksRequest{}
	return &this
}

// NewListRunTasksRequestWithDefaults instantiates a new ListRunTasksRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListRunTasksRequestWithDefaults() *ListRunTasksRequest {
	this := ListRunTasksRequest{}
	return &this
}

// GetRun returns the Run field value if set, zero value otherwise.
func (o *ListRunTasksRequest) GetRun() string {
	if o == nil || IsNil(o.Run) {
		var ret string
		return ret
	}
	return *o.Run
}

// GetRunOk returns a tuple with the Run field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListRunTasksRequest) GetRunOk() (*string, bool) {
	if o == nil || IsNil(o.Run) {
		return nil, false
	}
	return o.Run, true
}

// HasRun returns a boolean if a field has been set.
func (o *ListRunTasksRequest) HasRun() bool {
	if o != nil && !IsNil(o.Run) {
		return true
	}

	return false
}

// SetRun gets a reference to the given string and assigns it to the Run field.
func (o *ListRunTasksRequest) SetRun(v string) {
	o.Run = &v
}

// GetTask returns the Task field value if set, zero value otherwise.
func (o *ListRunTasksRequest) GetTask() string {
	if o == nil || IsNil(o.Task) {
		var ret string
		return ret
	}
	return *o.Task
}

// GetTaskOk returns a tuple with the Task field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListRunTasksRequest) GetTaskOk() (*string, bool) {
	if o == nil || IsNil(o.Task) {
		return nil, false
	}
	return o.Task, true
}

// HasTask returns a boolean if a field has been set.
func (o *ListRunTasksRequest) HasTask() bool {
	if o != nil && !IsNil(o.Task) {
		return true
	}

	return false
}

// SetTask gets a reference to the given string and assigns it to the Task field.
func (o *ListRunTasksRequest) SetTask(v string) {
	o.Task = &v
}

func (o ListRunTasksRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListRunTasksRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Run) {
		toSerialize["run"] = o.Run
	}
	if !IsNil(o.Task) {
		toSerialize["task"] = o.Task
	}
	return toSerialize, nil
}

type NullableListRunTasksRequest struct {
	value *ListRunTasksRequest
	isSet bool
}

func (v NullableListRunTasksRequest) Get() *ListRunTasksRequest {
	return v.value
}

func (v *NullableListRunTasksRequest) Set(val *ListRunTasksRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableListRunTasksRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableListRunTasksRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListRunTasksRequest(val *ListRunTasksRequest) *NullableListRunTasksRequest {
	return &NullableListRunTasksRequest{value: val, isSet: true}
}

func (v NullableListRunTasksRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListRunTasksRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


